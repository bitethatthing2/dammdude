export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      admin_users: {
        Row: {
          created_at: string | null
          email: string
          id: string
          role: string | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          email: string
          id: string
          role?: string | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          email?: string
          id?: string
          role?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      categories: {
        Row: {
          display_order: number | null
          icon: string | null
          id: number
          name: string
        }
        Insert: {
          display_order?: number | null
          icon?: string | null
          id?: number
          name: string
        }
        Update: {
          display_order?: number | null
          icon?: string | null
          id?: number
          name?: string
        }
        Relationships: []
      }
      fcm_tokens: {
        Row: {
          created_at: string
          device_info: Json | null
          token: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          device_info?: Json | null
          token: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          device_info?: Json | null
          token?: string
          updated_at?: string
        }
        Relationships: []
      }
      menu_item_option_groups: {
        Row: {
          menu_item_id: number
          option_group_id: number
        }
        Insert: {
          menu_item_id: number
          option_group_id: number
        }
        Update: {
          menu_item_id?: number
          option_group_id?: number
        }
        Relationships: [
          {
            foreignKeyName: "menu_item_option_groups_menu_item_id_fkey"
            columns: ["menu_item_id"]
            isOneToOne: false
            referencedRelation: "menu_items"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "menu_item_option_groups_option_group_id_fkey"
            columns: ["option_group_id"]
            isOneToOne: false
            referencedRelation: "option_groups"
            referencedColumns: ["id"]
          },
        ]
      }
      menu_items: {
        Row: {
          category_id: number | null
          description: string | null
          display_order: number | null
          id: number
          image_url: string | null
          is_specialty: boolean | null
          name: string
          price: number | null
        }
        Insert: {
          category_id?: number | null
          description?: string | null
          display_order?: number | null
          id?: number
          image_url?: string | null
          is_specialty?: boolean | null
          name: string
          price?: number | null
        }
        Update: {
          category_id?: number | null
          description?: string | null
          display_order?: number | null
          id?: number
          image_url?: string | null
          is_specialty?: boolean | null
          name?: string
          price?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "menu_items_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
        ]
      }
      option_groups: {
        Row: {
          id: number
          name: string
        }
        Insert: {
          id?: number
          name: string
        }
        Update: {
          id?: number
          name?: string
        }
        Relationships: []
      }
      options: {
        Row: {
          additional_price: number | null
          id: number
          name: string
          option_group_id: number | null
        }
        Insert: {
          additional_price?: number | null
          id?: number
          name: string
          option_group_id?: number | null
        }
        Update: {
          additional_price?: number | null
          id?: number
          name?: string
          option_group_id?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "options_option_group_id_fkey"
            columns: ["option_group_id"]
            isOneToOne: false
            referencedRelation: "option_groups"
            referencedColumns: ["id"]
          },
        ]
      }
      push_notifications: {
        Row: {
          created_at: string
          id: string
          message: string
          status: string | null
          title: string
          topic: string | null
        }
        Insert: {
          created_at?: string
          id?: string
          message: string
          status?: string | null
          title: string
          topic?: string | null
        }
        Update: {
          created_at?: string
          id?: string
          message?: string
          status?: string | null
          title?: string
          topic?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      notification_type: "info" | "success" | "warning" | "error"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Helper type for public schema (simplifies access to public schema)
export type PublicSchema = Database["public"]

export type Tables<T extends keyof PublicSchema["Tables"]> = PublicSchema["Tables"][T]["Row"]
export type TablesInsert<T extends keyof PublicSchema["Tables"]> = PublicSchema["Tables"][T]["Insert"]
export type TablesUpdate<T extends keyof PublicSchema["Tables"]> = PublicSchema["Tables"][T]["Update"]
export type Enums<T extends keyof PublicSchema["Enums"]> = PublicSchema["Enums"][T]
